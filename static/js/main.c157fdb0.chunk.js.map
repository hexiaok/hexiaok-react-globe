{"version":3,"sources":["Bio.js","markers.js","Globe.js","App.js","serviceWorker.js","index.js"],"names":["Bio","className","style","padding","width","href","target","rel","markers","id","city","year","activity","coordinates","value","color","Globe","useState","autoRotate","setAutoRotate","globe","setGlobe","touchSequence","clickSequence","handleClickOutside","console","debug","onDefocus","onClickTouchMarker","_marker","markerObject","event","type","options","enableMarkerTooltip","clientX","touches","clientY","tooltip","show","markerTooltipRenderer","marker","_previousCoordinates","_shouldDefocus","hide","useEffect","document","addEventListener","removeEventListener","enableGlobeGlow","globeGlowCoefficient","globeGlowColor","globeGlowPower","globeGlowRadiusScale","enableMarkerGlow","markerGlowPower","markerRadiusScaleRange","enableCameraZoom","cameraAutoRotateSpeed","globeTexture","globeCloudsTexture","globeBackgroundTexture","onClickMarker","onTouchMarker","onMouseOverMarker","onMouseOutMarker","onGetGlobe","App","Container","fluid","height","display","alignItems","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c157fdb0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction Bio() {\n  return (\n    <div className=\"col-xl-6 index-text\" style={{ padding: \"0\" }}>\n      <div style={{ width: \"75%\" }}>\n        <h1 className=\"bio-header\">This is Jian He.</h1>\n        <p className=\"bio-body\">\n          Wanderlust.\n            <br />Born in China, lived and worked in Boston, Singapore and now in Berlin.\n            <br />Always interested in trying new tools and methods to solve different problems.\n            <br />Keep on learning and getting inspired.\n            <br />Never stop exploring.\n            </p>\n        <div>\n          <a className=\"bio-link\" href=\"https://www.linkedin.com/in/jian-he-3a6056119/\" target=\"_blank\" rel=\"noopener noreferrer\">Linkedin</a>&nbsp;&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;&nbsp;\n          <a className=\"bio-link\" href=\"https://twitter.com/hexiaok\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>&nbsp;&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;&nbsp;\n          <a className=\"bio-link\" href=\"https://github.com/hexiaok\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Bio;","\nconst markers = [\n    {\n        id: 'Ningbo',\n        city: 'Ningbo',\n        year: '-2006 | ',\n        activity: 'Just a kid',\n        coordinates: [29.8683, 121.5440],\n        value: 100,\n        color: 'white',\n\n    },\n    {\n        id: 'Tianjin',\n        city: 'Tianjin',\n        year: '2006-2011 | ',\n        activity: 'Student',\n        coordinates: [39.3434, 117.3616],\n        value: 100,\n        color: 'white',\n    },\n    {\n        id: 'Boston',\n        city: 'Boston',\n        year: '2011-2015 | ',\n        activity: 'Student/Researcher',\n        coordinates: [42.3601, -71.0589],\n        value: 100,\n        color: 'white',\n    },\n    {\n        id: 'Singapore',\n        city: 'Singapore',\n        year: '2015-2019 | ',\n        activity: 'UX Designer',\n        coordinates: [1.3521, 103.8198],\n        value: 100,\n        color: 'white',\n    },\n    {\n        id: 'Berlin',\n        city: 'Berlin',\n        year: '2019- | ',\n        activity: 'Product Designer',\n        coordinates: [52.5200, 13.4050],\n        value: 100,\n        color: 'white',\n    },\n];\n\nexport default markers;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ReactGlobe from 'react-globe-custom';\nimport markers from './markers';\n\nconst Globe = () => {\n  let [autoRotate, setAutoRotate] = useState(\"rotate\")\n  const [globe, setGlobe] = useState(null)\n  const touchSequence = [\"onTouchMarker\", \"onTouchDefocus\", \"onTouchOutside\"]\n  const clickSequence = [\"onClickOutside\", \"onClickMarker\", \"onClickDefocus\"]\n\n  const handleClickOutside = () => {\n    console.debug(\"handleClickOutside\", autoRotate)\n    switch (autoRotate) {\n      case clickSequence[2]:\n      case touchSequence[2]:\n        onDefocus()\n        break\n      case touchSequence[1]:\n        setAutoRotate(touchSequence[2])\n        break\n      default:\n    }\n  }\n\n  const onClickTouchMarker = (_marker, markerObject, event) => {\n    console.debug(\"onClickMarker\", autoRotate, event.type)\n    autoRotate = clickSequence[1]\n    if (event.type === \"touchstart\") {\n      autoRotate = touchSequence[0]\n    }\n    // stop rotation\n    setAutoRotate(autoRotate)\n    // show tooltip\n    if (globe.options.enableMarkerTooltip) {\n      const clientX = event.clientX ? event.clientX : event.touches[0].clientX\n      const clientY = event.clientY ? event.clientY : event.touches[0].clientY\n      globe.tooltip.show(\n        clientX,\n        clientY,\n        globe.options.markerTooltipRenderer(markerObject.marker)\n      )\n    }\n    return false\n  }\n  const onDefocus = (_previousCoordinates, _shouldDefocus) => {\n    console.debug(\"onDefocus\", autoRotate)\n    switch (autoRotate) {\n      case clickSequence[2]:\n      case touchSequence[2]:\n        if (globe.options.enableMarkerTooltip) {\n          globe.tooltip.hide()\n        }\n        autoRotate = \"rotate\"\n        setAutoRotate(\"rotate\")\n        break\n      case touchSequence[0]:\n        autoRotate = touchSequence[1]\n        break\n      case clickSequence[1]:\n        setAutoRotate(clickSequence[2])\n        break\n      default:\n    }\n    return false\n  }\n  const returnTootipText = (marker) => {\n    return `${marker.year} ${marker.city}\\n${marker.activity}`\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside)\n    document.addEventListener(\"touchstart\", handleClickOutside)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n      document.removeEventListener(\"touchstart\", handleClickOutside)\n    }\n  })\n\n  return (\n    <ReactGlobe\n      markers={markers}\n      options={{\n        enableGlobeGlow: true,\n        globeGlowCoefficient: 0.11,\n        globeGlowColor: 'white',\n        globeGlowPower: 12,\n        globeGlowRadiusScale: 0.45,\n        enableMarkerGlow: true,\n        markerGlowPower: 10,\n        enableMarkerTooltip: true,\n        markerTooltipRenderer: returnTootipText,\n        markerRadiusScaleRange: [0.001, 0.045],\n        enableCameraZoom: true,\n        cameraAutoRotateSpeed: autoRotate === \"rotate\" ? 1 : 0\n      }}\n      globeTexture=\"./globe_dark.jpg\"\n      globeCloudsTexture={null}\n      globeBackgroundTexture={null}\n      onClickMarker={onClickTouchMarker}\n      onTouchMarker={onClickTouchMarker}\n      onMouseOverMarker={() => false}\n      onMouseOutMarker={() => false}\n      onDefocus={onDefocus}\n      onGetGlobe={setGlobe}\n    />\n  )\n}\n\nexport default Globe","import React from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Bio from './Bio'\nimport Globe from './Globe'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <div className=\"row\" style={{ height: \"100vh\" }}>\n            <Bio />\n            <div className=\"col-xl-6\" style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div style={{ height: \"50%\", width: \"100%\" }}>\n                <Globe />\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}