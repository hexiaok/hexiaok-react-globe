{"version":3,"sources":["react-globe/dist/index.module.js","markers.js","App.js","serviceWorker.js","index.js"],"names":["ObjectName","MarkerType","CAMERA_MAX_POLAR_ANGLE","Math","PI","INITIAL_COORDINATES","MARKER_ACTIVE_ANIMATION_EASING_FUNCTION","defaultCameraOptions","autoRotateSpeed","distanceRadiusScale","enableAutoRotate","enableRotate","enableZoom","maxDistanceRadiusScale","maxPolarAngle","minPolarAngle","rotateSpeed","zoomSpeed","defaultFocusOptions","animationDuration","easingFunction","enableDefocus","defaultGlobeOptions","backgroundTexture","cloudsOpacity","cloudsTexture","enableBackground","enableClouds","enableGlow","glowCoefficient","glowColor","glowPower","glowRadiusScale","texture","defaultLightOptions","ambientLightColor","ambientLightIntensity","pointLightColor","pointLightIntensity","pointLightPositionRadiusScales","defaultDotMarkerOptions","activeScale","enableTooltip","enterAnimationDuration","enterEasingFunction","exitAnimationDuration","exitEasingFunction","getTooltipContent","marker","JSON","stringify","coordinates","radiusScaleRange","type","Dot","defaultMarkerOptions","Bar","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Tooltip","div","instance","tippy","animation","destroy","console","log","hide","document","body","style","cursor","position","left","top","show","clientX","clientY","content","setContent","coordinatesToPosition","radius","lat","long","phi","theta","cos","sin","getMarkerCoordinatesKey","toString","maxValue","array","callback","forEach","item","minValue","Infinity","tween","from","to","onUpdate","onEnd","Tween","easing","Easing","on","start","emptyFunction","defaultCallbacks","onClickMarker","onDefocus","onMouseOutMarker","onMouseOverMarker","onTextureLoaded","defaultOptions","camera","globe","focus","light","Globe","canvas","tooltipDiv","_this","renderer","WebGLRenderer","alpha","antialias","PerspectiveCamera","cameraAmbientLight","AmbientLight","cameraPointLight","PointLight","Group","globeBackground","Mesh","globeClouds","globeSphere","markerObjects","orbitControls","OrbitControls","domElement","scene","Scene","tooltip","name","Camera","CameraAmbientLight","CameraPointLight","GlobeBackground","GlobeClouds","GlobeSphere","MarkerObjects","add","Interaction","event","isFocusing","activeMarker","options","from_1","_a","activeMarkerObject","scale","set","undefined","callbacks","data","originalEvent","handleClick","autoRotate","preFocusPosition","updateFocus","animationFrameId","isFrozen","updateCallbacks","updateCamera","updateGlobe","updateLights","updateMarkers","updateSize","animate","render","requestAnimationFrame","bind","animateClouds","getObjectByName","axis","rotation","random","applyAnimations","animations","currentFocus","currentFocusOptions","wait","timeouts","timeout","setTimeout","push","clearTimeout","cancelAnimationFrame","enableOrbitControls","enabled","freeze","sortObjects","update","keys","key","initialCoordinates","cameraOptions","updateOptions","_b","x","y","z","far","RADIUS","fov","near","dampingFactor","enableDamping","enablePan","maxDistance","minDistance","focusOptions","autoDefocus","from_2","il","r","Array","k","a","j","jl","__spreadArrays","from_3","globeOptions","TextureLoader","load","map","geometry","SphereGeometry","material","MeshLambertMaterial","remove","GlobeGlow","globeGlow","createGlowMesh","backside","color","coefficient","power","size","MeshBasicMaterial","side","BackSide","transparent","opacity","lightOptions","Color","intensity","markers","markerOptions","offsetRadiusScale","sizeScale","scaleLinear","domain","value","range","markerCoordinatesKeys","Set","markerObjectNames","children","markerObject","markerCoordinatesKey","has","color_1","from_4","mesh_1","BoxGeometry","glowMesh","clone","lookAt","Vector3","stopPropagation","targetTouches","toArray","filter","width","height","setSize","aspect","updateProjectionMatrix","unfreeze","ReactGlobe","onGetGlobeInstance","initialSize","canvasRef","useRef","globeInstanceRef","mountRef","tooltipRef","useState","useEffect","mount","current","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","entries","contentRect","width_1","height_1","observe","unobserve","useResize","globeInstance","appendChild","removeChild","React","createElement","ref","display","defaultProps","id","city","year","activity","App","click","setClick","className","onMouseDown","Container","fluid","justifyContent","alignItems","backgroundColor","fontSize","paddingLeft","paddingRight","lineHeight","clickedOut","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e360d09e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { Tween, Easing, update } from 'es6-tween';\r\nimport { TextureLoader, SphereGeometry, MeshLambertMaterial, MeshBasicMaterial, BackSide, Color, Mesh, BoxGeometry, Vector3, WebGLRenderer, PerspectiveCamera, AmbientLight, PointLight, Group, Scene } from 'three';\r\nimport { createGlowMesh } from 'three-glow-mesh';\r\nimport OrbitControls from 'three-orbitcontrols';\r\nimport { Interaction } from 'three.interaction';\r\nimport tippy from 'tippy.js';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nvar ObjectName;\r\n(function (ObjectName) {\r\n    ObjectName[\"Camera\"] = \"CAMERA\";\r\n    ObjectName[\"CameraAmbientLight\"] = \"CAMERA_AMBIENT_LIGHT\";\r\n    ObjectName[\"CameraPointLight\"] = \"CAMERA_POINT_LIGHT\";\r\n    ObjectName[\"Globe\"] = \"GLOBE\";\r\n    ObjectName[\"GlobeBackground\"] = \"GLOBE_BACKGROUND\";\r\n    ObjectName[\"GlobeClouds\"] = \"GLOBE_CLOUDS\";\r\n    ObjectName[\"GlobeGlow\"] = \"GLOBE_GLOW\";\r\n    ObjectName[\"GlobeSphere\"] = \"GLOBE_SPHERE\";\r\n    ObjectName[\"MarkerObjects\"] = \"MARKER_OBJECTS\";\r\n    ObjectName[\"Scene\"] = \"SCENE\";\r\n})(ObjectName || (ObjectName = {}));\r\nvar MarkerType;\r\n(function (MarkerType) {\r\n    MarkerType[\"Bar\"] = \"bar\";\r\n    MarkerType[\"Dot\"] = \"dot\";\r\n})(MarkerType || (MarkerType = {}));\r\n\r\n// hardcoded constants that can eventually be exposed via options\r\nvar RADIUS = 300;\r\nvar BACKGROUND_RADIUS_SCALE = 10;\r\nvar CAMERA_FAR = RADIUS * 100;\r\nvar CAMERA_FOV = 45;\r\nvar CAMERA_NEAR = 1;\r\nvar CAMERA_DAMPING_FACTOR = 0.1;\r\nvar CAMERA_MAX_POLAR_ANGLE = Math.PI;\r\nvar CAMERA_MIN_POLAR_ANGLE = 0;\r\nvar CAMERA_MIN_DISTANCE_RADIUS_SCALE = 1.1;\r\nvar CLOUDS_RADIUS_OFFSET = 1;\r\nvar GLOBE_SEGMENTS = 50;\r\nvar INITIAL_COORDINATES = [29.8683, 121.5440];\r\nvar MARKER_DEFAULT_COLOR = 'gold';\r\nvar MARKER_SEGMENTS = 10;\r\nvar MARKER_UNIT_RADIUS_SCALE = 0.01;\r\nvar MARKER_ACTIVE_ANIMATION_DURATION = 100;\r\nvar MARKER_ACTIVE_ANIMATION_EASING_FUNCTION = [\r\n    'Cubic',\r\n    'In',\r\n];\r\nvar defaultCameraOptions = {\r\n    autoRotateSpeed: 0.1,\r\n    distanceRadiusScale: 3,\r\n    enableAutoRotate: true,\r\n    enableRotate: true,\r\n    enableZoom: true,\r\n    maxDistanceRadiusScale: 4,\r\n    maxPolarAngle: CAMERA_MAX_POLAR_ANGLE,\r\n    minPolarAngle: CAMERA_MIN_POLAR_ANGLE,\r\n    rotateSpeed: 0.2,\r\n    zoomSpeed: 1,\r\n};\r\nvar defaultFocusOptions = {\r\n    animationDuration: 1000,\r\n    distanceRadiusScale: 1.5,\r\n    easingFunction: ['Cubic', 'Out'],\r\n    enableDefocus: true,\r\n};\r\nvar defaultGlobeOptions = {\r\n    backgroundTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/background.png',\r\n    cloudsOpacity: 0.3,\r\n    cloudsTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/clouds.png',\r\n    enableBackground: true,\r\n    enableClouds: true,\r\n    enableGlow: true,\r\n    glowCoefficient: 0.1,\r\n    glowColor: '#d1d1d1',\r\n    glowPower: 3,\r\n    glowRadiusScale: 0.2,\r\n    texture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/globe_dark.jpg',\r\n};\r\nvar defaultLightOptions = {\r\n    ambientLightColor: 'white',\r\n    ambientLightIntensity: 0.8,\r\n    pointLightColor: 'white',\r\n    pointLightIntensity: 1,\r\n    pointLightPositionRadiusScales: [-2, 1, -1],\r\n};\r\nvar defaultDotMarkerOptions = {\r\n    activeScale: 1.3,\r\n    enableGlow: true,\r\n    enableTooltip: true,\r\n    enterAnimationDuration: 1000,\r\n    enterEasingFunction: ['Linear', 'None'],\r\n    exitAnimationDuration: 500,\r\n    exitEasingFunction: ['Cubic', 'Out'],\r\n    getTooltipContent: function (marker) { return JSON.stringify(marker.coordinates); },\r\n    glowCoefficient: 0,\r\n    glowPower: 3,\r\n    glowRadiusScale: 2,\r\n    radiusScaleRange: [0.005, 0.02],\r\n    type: MarkerType.Dot,\r\n};\r\nvar defaultBarMarkerOptions = {\r\n    activeScale: 1.02,\r\n    enableGlow: false,\r\n    enableTooltip: true,\r\n    enterAnimationDuration: 2000,\r\n    enterEasingFunction: ['Linear', 'None'],\r\n    exitAnimationDuration: 1000,\r\n    exitEasingFunction: ['Cubic', 'Out'],\r\n    getTooltipContent: function (marker) { return JSON.stringify(marker.coordinates); },\r\n    glowCoefficient: 0,\r\n    glowPower: 3,\r\n    glowRadiusScale: 2,\r\n    offsetRadiusScale: 0,\r\n    radiusScaleRange: [0.2, defaultFocusOptions.distanceRadiusScale - 1],\r\n    type: MarkerType.Bar,\r\n};\r\nvar defaultMarkerOptions = defaultDotMarkerOptions;\r\n\r\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\r\n        s += arguments[i].length;\r\n    }\r\n    i = 0\r\n    for (var r = Array(s), k = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nvar TOOLTIP_OFFSET = 10;\r\nvar Tooltip = /** @class */ (function () {\r\n    function Tooltip(div) {\r\n        this.div = div;\r\n        this.instance = tippy(this.div, {\r\n            animation: 'scale',\r\n        });\r\n    }\r\n    Tooltip.prototype.destroy = function () {\r\n        console.log(\"Tooltip destroy\")\r\n        this.instance.destroy();\r\n    };\r\n    Tooltip.prototype.hide = function () {\r\n        document.body.style.cursor = 'inherit';\r\n        this.div.style.position = 'fixed';\r\n        this.div.style.left = '0';\r\n        this.div.style.top = '0';\r\n        this.instance.hide();\r\n    };\r\n    Tooltip.prototype.show = function (clientX, clientY, content) {\r\n        document.body.style.cursor = 'pointer';\r\n        this.div.style.position = 'fixed';\r\n        this.div.style.left = clientX + TOOLTIP_OFFSET + \"px\";\r\n        this.div.style.top = clientY + TOOLTIP_OFFSET + \"px\";\r\n        this.instance.setContent(content);\r\n        this.instance.show();\r\n    };\r\n    return Tooltip;\r\n}());\r\n\r\nfunction coordinatesToPosition(coordinates, radius) {\r\n    var lat = coordinates[0], long = coordinates[1];\r\n    var phi = (lat * Math.PI) / 180;\r\n    var theta = ((long - 180) * Math.PI) / 180;\r\n    var x = -radius * Math.cos(phi) * Math.cos(theta);\r\n    var y = radius * Math.sin(phi);\r\n    var z = radius * Math.cos(phi) * Math.sin(theta);\r\n    return [x, y, z];\r\n}\r\nfunction getMarkerCoordinatesKey(marker) {\r\n    return marker.coordinates.toString();\r\n}\r\nfunction maxValue(array, callback) {\r\n    var maxValue = 0;\r\n    array.forEach(function (item) {\r\n        if (callback(item) > maxValue) {\r\n            maxValue = callback(item);\r\n        }\r\n    });\r\n    return maxValue;\r\n}\r\nfunction minValue(array, callback) {\r\n    var minValue = Infinity;\r\n    array.forEach(function (item) {\r\n        if (callback(item) < minValue) {\r\n            minValue = callback(item);\r\n        }\r\n    });\r\n    return minValue;\r\n}\r\nfunction tween(from, to, animationDuration, easingFunction, onUpdate, onEnd) {\r\n    new Tween(from)\r\n        .to(to, animationDuration)\r\n        .easing(Easing[easingFunction[0]][easingFunction[1]])\r\n        .on('update', onUpdate)\r\n        .on('complete', onEnd)\r\n        .start();\r\n}\r\n\r\nvar emptyFunction = function () { };\r\nvar defaultCallbacks = {\r\n    onClickMarker: emptyFunction,\r\n    onDefocus: emptyFunction,\r\n    onMouseOutMarker: emptyFunction,\r\n    onMouseOverMarker: emptyFunction,\r\n    onTextureLoaded: emptyFunction,\r\n};\r\nvar defaultOptions = {\r\n    camera: defaultCameraOptions,\r\n    globe: defaultGlobeOptions,\r\n    focus: defaultFocusOptions,\r\n    marker: defaultMarkerOptions,\r\n    light: defaultLightOptions,\r\n};\r\nvar Globe = /** @class */ (function () {\r\n    function Globe(canvas, tooltipDiv) {\r\n        var _this = this;\r\n        // create objects\r\n        var renderer = new WebGLRenderer({\r\n            alpha: true,\r\n            antialias: true,\r\n            canvas: canvas,\r\n        });\r\n        var camera = new PerspectiveCamera();\r\n        var cameraAmbientLight = new AmbientLight('white');\r\n        var cameraPointLight = new PointLight('white');\r\n        var globe = new Group();\r\n        var globeBackground = new Mesh();\r\n        var globeClouds = new Mesh();\r\n        var globeSphere = new Mesh();\r\n        var markerObjects = new Group();\r\n        var orbitControls = new OrbitControls(camera, renderer.domElement);\r\n        var scene = new Scene();\r\n        var tooltip = new Tooltip(tooltipDiv);\r\n        // name objects\r\n        camera.name = ObjectName.Camera;\r\n        cameraAmbientLight.name = ObjectName.CameraAmbientLight;\r\n        cameraPointLight.name = ObjectName.CameraPointLight;\r\n        globe.name = ObjectName.Globe;\r\n        globeBackground.name = ObjectName.GlobeBackground;\r\n        globeClouds.name = ObjectName.GlobeClouds;\r\n        globeSphere.name = ObjectName.GlobeSphere;\r\n        markerObjects.name = ObjectName.MarkerObjects;\r\n        scene.name = ObjectName.Scene;\r\n        // add objects to scene\r\n        camera.add(cameraAmbientLight);\r\n        camera.add(cameraPointLight);\r\n        globe.add(globeBackground);\r\n        globe.add(globeClouds);\r\n        globe.add(globeSphere);\r\n        scene.add(markerObjects);\r\n        scene.add(camera);\r\n        scene.add(globe);\r\n        // add interactions to scene\r\n        new Interaction(renderer, scene, camera);\r\n        scene.on('mousemove', function (event) {\r\n            if (_this.isFocusing()) {\r\n                return;\r\n            }\r\n            if (_this.activeMarker) {\r\n                var activeScale = _this.options.marker.activeScale;\r\n                var from_1 = [activeScale, activeScale, activeScale];\r\n                tween(from_1, [1, 1, 1], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\r\n                    var _a;\r\n                    if (_this.activeMarkerObject) {\r\n                        (_a = _this.activeMarkerObject.scale).set.apply(_a, from_1);\r\n                    }\r\n                }, function () {\r\n                    _this.activeMarker = undefined;\r\n                    _this.activeMarkerObject = undefined;\r\n                });\r\n                _this.callbacks.onMouseOutMarker(_this.activeMarker, _this.activeMarkerObject, event.data.originalEvent);\r\n                _this.tooltip.hide();\r\n            }\r\n        });\r\n        var handleClick = function (event) {\r\n            // tony\r\n            console.log(event)\r\n            _this.orbitControls.autoRotate = true;\r\n            console.log(\"handleClick\")\r\n            _this.tooltip.hide();\r\n            if (_this.isFocusing()) {\r\n                return;\r\n            }\r\n            console.log(\"enableDefocus\", _this.options.focus.enableDefocus)\r\n            console.log(\"preFocusPosition\", _this.preFocusPosition)\r\n            if (_this.options.focus.enableDefocus && _this.preFocusPosition) {\r\n                _this.callbacks.onDefocus(_this.focus, event.data.originalEvent);\r\n                _this.updateFocus(undefined, _this.options.focus);\r\n            }\r\n        }\r\n        scene.on('click', handleClick);\r\n        scene.on('touchstart', handleClick);\r\n        // assign values to class variables\r\n        this.activeMarker = undefined;\r\n        this.activeMarkerObject = undefined;\r\n        this.animationFrameId = undefined;\r\n        this.callbacks = defaultCallbacks;\r\n        this.camera = camera;\r\n        this.focus = undefined;\r\n        this.globe = globe;\r\n        this.isFrozen = false;\r\n        this.markerObjects = markerObjects;\r\n        this.options = defaultOptions;\r\n        this.orbitControls = orbitControls;\r\n        this.preFocusPosition = undefined;\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.tooltip = tooltip;\r\n        // update objects\r\n        this.updateCallbacks();\r\n        this.updateCamera();\r\n        this.updateFocus();\r\n        this.updateGlobe({\r\n            enableBackground: false,\r\n            enableClouds: false,\r\n        });\r\n        this.updateLights();\r\n        this.updateMarkers();\r\n        this.updateSize();\r\n    }\r\n    Globe.prototype.animate = function () {\r\n        this.render();\r\n        this.animationFrameId = requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n    // TODO: expose a way to customize animating clouds in every axis\r\n    Globe.prototype.animateClouds = function () {\r\n        var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\r\n        ['x', 'y', 'z'].forEach(function (axis) {\r\n            globeClouds.rotation[axis] += Math.random() / 10000;\r\n        });\r\n    };\r\n    // For each animation, update the focus and focusOptions provided by the animation over an array of timeouts\r\n    Globe.prototype.applyAnimations = function (animations) {\r\n        var _this = this;\r\n        var currentFocus = this.focus;\r\n        var currentFocusOptions = this.options.focus;\r\n        var wait = 0;\r\n        var timeouts = [];\r\n        animations.forEach(function (animation) {\r\n            var animationDuration = animation.animationDuration, coordinates = animation.coordinates, distanceRadiusScale = animation.distanceRadiusScale, easingFunction = animation.easingFunction;\r\n            var timeout = setTimeout(function () {\r\n                _this.updateFocus(coordinates, {\r\n                    animationDuration: animationDuration,\r\n                    distanceRadiusScale: distanceRadiusScale,\r\n                    easingFunction: easingFunction,\r\n                }, true);\r\n            }, wait);\r\n            timeouts.push(timeout);\r\n            wait += animationDuration;\r\n        });\r\n        // return cleanup function\r\n        return function () {\r\n            timeouts.forEach(function (timeout) {\r\n                clearTimeout(timeout);\r\n            });\r\n            _this.updateFocus(currentFocus, currentFocusOptions);\r\n        };\r\n    };\r\n    Globe.prototype.destroy = function () {\r\n        cancelAnimationFrame(this.animationFrameId);\r\n        this.tooltip.destroy();\r\n    };\r\n    Globe.prototype.enableOrbitControls = function (enabled, autoRotate) {\r\n        if (autoRotate === void 0) { autoRotate = enabled; }\r\n        this.orbitControls.enabled = enabled;\r\n        this.orbitControls.autoRotate = autoRotate;\r\n    };\r\n    Globe.prototype.freeze = function () {\r\n        this.isFrozen = true;\r\n        this.enableOrbitControls(false);\r\n        cancelAnimationFrame(this.animationFrameId);\r\n    };\r\n    Globe.prototype.getObjectByName = function (name) {\r\n        return this.scene.getObjectByName(name);\r\n    };\r\n    Globe.prototype.isFocusing = function () {\r\n        return !this.orbitControls.enabled;\r\n    };\r\n    Globe.prototype.render = function () {\r\n        this.renderer.sortObjects = false;\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.animateClouds();\r\n        this.orbitControls.update();\r\n        update();\r\n    };\r\n    Globe.prototype.updateCallbacks = function (callbacks) {\r\n        var _this = this;\r\n        if (callbacks === void 0) { callbacks = {}; }\r\n        Object.keys(defaultCallbacks).forEach(function (key) {\r\n            _this.callbacks[key] = callbacks[key] || defaultCallbacks[key];\r\n        });\r\n    };\r\n    Globe.prototype.updateCamera = function (initialCoordinates, cameraOptions) {\r\n        if (initialCoordinates === void 0) { initialCoordinates = INITIAL_COORDINATES; }\r\n        if (cameraOptions === void 0) { cameraOptions = {}; }\r\n        this.updateOptions(cameraOptions, 'camera');\r\n        var _a = this.options.camera, autoRotateSpeed = _a.autoRotateSpeed, distanceRadiusScale = _a.distanceRadiusScale, enableAutoRotate = _a.enableAutoRotate, enableRotate = _a.enableRotate, enableZoom = _a.enableZoom, maxDistanceRadiusScale = _a.maxDistanceRadiusScale, maxPolarAngle = _a.maxPolarAngle, minPolarAngle = _a.minPolarAngle, rotateSpeed = _a.rotateSpeed, zoomSpeed = _a.zoomSpeed;\r\n        if (this.initialCoordinates !== initialCoordinates) {\r\n            var _b = coordinatesToPosition(initialCoordinates, RADIUS * distanceRadiusScale), x = _b[0], y = _b[1], z = _b[2];\r\n            this.camera.position.set(x, y, z);\r\n            this.initialCoordinates = initialCoordinates;\r\n        }\r\n        console.log(\"STOP3\", cameraOptions)\r\n        this.camera.far = CAMERA_FAR;\r\n        this.camera.fov = CAMERA_FOV;\r\n        this.camera.near = CAMERA_NEAR;\r\n        this.orbitControls.autoRotate = enableAutoRotate;\r\n        this.orbitControls.autoRotateSpeed = autoRotateSpeed;\r\n        this.orbitControls.dampingFactor = CAMERA_DAMPING_FACTOR;\r\n        this.orbitControls.enableDamping = true;\r\n        this.orbitControls.enablePan = false;\r\n        this.orbitControls.enableRotate = enableRotate;\r\n        this.orbitControls.enableZoom = enableZoom;\r\n        this.orbitControls.maxDistance = RADIUS * maxDistanceRadiusScale;\r\n        this.orbitControls.maxPolarAngle = maxPolarAngle;\r\n        this.orbitControls.minDistance = RADIUS * CAMERA_MIN_DISTANCE_RADIUS_SCALE;\r\n        this.orbitControls.minPolarAngle = minPolarAngle;\r\n        this.orbitControls.rotateSpeed = rotateSpeed;\r\n        this.orbitControls.zoomSpeed = zoomSpeed;\r\n    };\r\n    Globe.prototype.updateFocus = function (focus, focusOptions, autoDefocus) {\r\n        var _this = this;\r\n        if (focusOptions === void 0) { focusOptions = {}; }\r\n        if (autoDefocus === void 0) { autoDefocus = false; }\r\n        this.updateOptions(focusOptions, 'focus');\r\n        this.focus = focus;\r\n        var _a = this.options.focus, animationDuration = _a.animationDuration, distanceRadiusScale = _a.distanceRadiusScale, easingFunction = _a.easingFunction;\r\n        if (this.isFrozen) {\r\n            return;\r\n        }\r\n        if (this.focus) {\r\n            // disable orbit controls when focused\r\n            var from_2 = [\r\n                this.camera.position.x,\r\n                this.camera.position.y,\r\n                this.camera.position.z,\r\n            ];\r\n            var to = coordinatesToPosition(this.focus, RADIUS * distanceRadiusScale);\r\n            this.preFocusPosition = this.preFocusPosition || __spreadArrays(from_2);\r\n            tween(from_2, to, animationDuration, easingFunction, function () {\r\n                var _a;\r\n                _this.enableOrbitControls(false);\r\n                (_a = _this.camera.position).set.apply(_a, from_2);\r\n            }, function () {\r\n                if (autoDefocus) {\r\n                    _this.focus = undefined;\r\n                    _this.preFocusPosition = undefined;\r\n                }\r\n                _this.enableOrbitControls(true, autoDefocus);\r\n            });\r\n        }\r\n        else {\r\n            if (this.preFocusPosition) {\r\n                var from_3 = [\r\n                    this.camera.position.x,\r\n                    this.camera.position.y,\r\n                    this.camera.position.z,\r\n                ];\r\n                to = this.preFocusPosition;\r\n                tween(from_3, to, animationDuration, easingFunction, function () {\r\n                    var _a;\r\n                    _this.enableOrbitControls(false);\r\n                    (_a = _this.camera.position).set.apply(_a, from_3);\r\n                }, function () {\r\n                    _this.preFocusPosition = undefined;\r\n                    _this.enableOrbitControls(true);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Globe.prototype.updateGlobe = function (globeOptions) {\r\n        var _this = this;\r\n        if (globeOptions === void 0) { globeOptions = {}; }\r\n        this.updateOptions(globeOptions, 'globe');\r\n        var _a = this.options.globe, backgroundTexture = _a.backgroundTexture, cloudsOpacity = _a.cloudsOpacity, cloudsTexture = _a.cloudsTexture, enableBackground = _a.enableBackground, enableClouds = _a.enableClouds, enableGlow = _a.enableGlow, glowColor = _a.glowColor, glowCoefficient = _a.glowCoefficient, glowPower = _a.glowPower, glowRadiusScale = _a.glowRadiusScale, texture = _a.texture;\r\n        var globeBackground = this.getObjectByName(ObjectName.GlobeBackground);\r\n        var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\r\n        var globeSphere = this.getObjectByName(ObjectName.GlobeSphere);\r\n        new TextureLoader().load(texture, function (map) {\r\n            globeSphere.geometry = new SphereGeometry(RADIUS, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n            globeSphere.material = new MeshLambertMaterial({\r\n                map: map,\r\n            });\r\n            if (enableGlow) {\r\n                globeSphere.remove(_this.getObjectByName(ObjectName.GlobeGlow));\r\n                var globeGlow = createGlowMesh(globeSphere.geometry, {\r\n                    backside: true,\r\n                    color: glowColor,\r\n                    coefficient: glowCoefficient,\r\n                    power: glowPower,\r\n                    size: RADIUS * glowRadiusScale,\r\n                });\r\n                globeGlow.name = ObjectName.GlobeGlow;\r\n                globeSphere.add(globeGlow);\r\n            }\r\n            _this.callbacks.onTextureLoaded();\r\n        });\r\n        if (enableBackground) {\r\n            new TextureLoader().load(backgroundTexture, function (map) {\r\n                globeBackground.geometry = new SphereGeometry(RADIUS * BACKGROUND_RADIUS_SCALE, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n                globeBackground.material = new MeshBasicMaterial({\r\n                    map: map,\r\n                    side: BackSide,\r\n                });\r\n            });\r\n        }\r\n        if (enableClouds) {\r\n            new TextureLoader().load(cloudsTexture, function (map) {\r\n                globeClouds.geometry = new SphereGeometry(RADIUS + CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n                globeClouds.material = new MeshLambertMaterial({\r\n                    map: map,\r\n                    transparent: true,\r\n                });\r\n                globeClouds.material.opacity = cloudsOpacity;\r\n            });\r\n        }\r\n    };\r\n    Globe.prototype.updateLights = function (lightOptions) {\r\n        if (lightOptions === void 0) { lightOptions = {}; }\r\n        this.updateOptions(lightOptions, 'light');\r\n        var _a = this.options.light, ambientLightColor = _a.ambientLightColor, ambientLightIntensity = _a.ambientLightIntensity, pointLightColor = _a.pointLightColor, pointLightIntensity = _a.pointLightIntensity, pointLightPositionRadiusScales = _a.pointLightPositionRadiusScales;\r\n        var cameraAmbientLight = this.getObjectByName(ObjectName.CameraAmbientLight);\r\n        var cameraPointLight = this.getObjectByName(ObjectName.CameraPointLight);\r\n        cameraAmbientLight.color = new Color(ambientLightColor);\r\n        cameraAmbientLight.intensity = ambientLightIntensity;\r\n        cameraPointLight.color = new Color(pointLightColor);\r\n        cameraPointLight.intensity = pointLightIntensity;\r\n        cameraPointLight.position.set(RADIUS * pointLightPositionRadiusScales[0], RADIUS * pointLightPositionRadiusScales[1], RADIUS * pointLightPositionRadiusScales[2]);\r\n    };\r\n    Globe.prototype.updateMarkers = function (markers, markerOptions) {\r\n        var _this = this;\r\n        if (markers === void 0) { markers = []; }\r\n        if (markerOptions === void 0) { markerOptions = {}; }\r\n        this.updateOptions(markerOptions, 'marker');\r\n        var _a = this.options.marker, activeScale = _a.activeScale, enableGlow = _a.enableGlow, enableTooltip = _a.enableTooltip, enterAnimationDuration = _a.enterAnimationDuration, enterEasingFunction = _a.enterEasingFunction, exitAnimationDuration = _a.exitAnimationDuration, exitEasingFunction = _a.exitEasingFunction, getTooltipContent = _a.getTooltipContent, glowCoefficient = _a.glowCoefficient, glowPower = _a.glowPower, glowRadiusScale = _a.glowRadiusScale, offsetRadiusScale = _a.offsetRadiusScale, radiusScaleRange = _a.radiusScaleRange, renderer = _a.renderer, type = _a.type;\r\n        var unitRadius = RADIUS * MARKER_UNIT_RADIUS_SCALE;\r\n        var sizeScale = scaleLinear()\r\n            .domain([\r\n            minValue(markers, function (marker) { return marker.value; }),\r\n            maxValue(markers, function (marker) { return marker.value; }),\r\n        ])\r\n            .range([RADIUS * radiusScaleRange[0], RADIUS * radiusScaleRange[1]]);\r\n        var markerCoordinatesKeys = new Set(markers.map(getMarkerCoordinatesKey));\r\n        var markerObjectNames = new Set(this.markerObjects.children.map(function (markerObject) { return markerObject.name; }));\r\n        markers.forEach(function (marker) {\r\n            var _a;\r\n            var coordinates = marker.coordinates, value = marker.value;\r\n            var markerCoordinatesKey = getMarkerCoordinatesKey(marker);\r\n            var size = sizeScale(value);\r\n            var markerObject;\r\n            // create new marker objects\r\n            if (!markerObjectNames.has(markerCoordinatesKey)) {\r\n                if (renderer !== undefined) {\r\n                    markerObject = renderer(marker);\r\n                }\r\n                else {\r\n                    var color_1 = marker.color || MARKER_DEFAULT_COLOR;\r\n                    var from_4 = { size: 0 };\r\n                    var to = { size: size };\r\n                    var mesh_1 = new Mesh();\r\n                    tween(from_4, to, enterAnimationDuration, enterEasingFunction, function () {\r\n                        switch (type) {\r\n                            case MarkerType.Bar:\r\n                                mesh_1.geometry = new BoxGeometry(unitRadius, unitRadius, from_4.size);\r\n                                mesh_1.material = new MeshLambertMaterial({\r\n                                    color: color_1,\r\n                                });\r\n                                break;\r\n                            case MarkerType.Dot:\r\n                            default:\r\n                                mesh_1.geometry = new SphereGeometry(from_4.size, MARKER_SEGMENTS, MARKER_SEGMENTS);\r\n                                mesh_1.material = new MeshBasicMaterial({ color: color_1 });\r\n                                if (enableGlow) {\r\n                                    // add glow\r\n                                    var glowMesh = createGlowMesh(mesh_1.geometry.clone(), {\r\n                                        backside: false,\r\n                                        color: color_1,\r\n                                        coefficient: glowCoefficient,\r\n                                        power: glowPower,\r\n                                        size: from_4.size * glowRadiusScale,\r\n                                    });\r\n                                    mesh_1.children = [];\r\n                                    mesh_1.add(glowMesh);\r\n                                }\r\n                        }\r\n                    });\r\n                    markerObject = mesh_1;\r\n                }\r\n                // place markers\r\n                var heightOffset = 0;\r\n                if (offsetRadiusScale !== undefined) {\r\n                    heightOffset = RADIUS * offsetRadiusScale;\r\n                }\r\n                else {\r\n                    if (type === MarkerType.Dot) {\r\n                        heightOffset = (size * (1 + glowRadiusScale)) / 2;\r\n                    }\r\n                    else {\r\n                        heightOffset = 0;\r\n                    }\r\n                }\r\n                var position = coordinatesToPosition(coordinates, RADIUS + heightOffset);\r\n                (_a = markerObject.position).set.apply(_a, position);\r\n                markerObject.lookAt(new Vector3(0, 0, 0));\r\n                markerObject.name = markerCoordinatesKey;\r\n                _this.markerObjects.add(markerObject);\r\n            }\r\n            // update existing marker objects\r\n            markerObject = _this.markerObjects.getObjectByName(markerCoordinatesKey);\r\n            var handleClick = function (event) {\r\n                event.stopPropagation();\r\n                var originalEvent = event.data.originalEvent;\r\n                var clientX = originalEvent.clientX || originalEvent.targetTouches[0].clientX\r\n                var clientY = originalEvent.clientY || originalEvent.targetTouches[0].clientY\r\n                if (enableTooltip) {\r\n                    _this.tooltip.show(clientX, clientY, getTooltipContent(marker));\r\n                }\r\n                // tony\r\n                this.orbitControls.autoRotate = false\r\n                console.log(\"STOP\")\r\n                // _this.updateFocus(marker.coordinates);\r\n                // _this.callbacks.onClickMarker(marker, markerObject, event.data.originalEvent);\r\n            };\r\n            markerObject.on('click', handleClick.bind(_this));\r\n            markerObject.on('touchstart', handleClick.bind(_this));\r\n            markerObject.on('mousemove', function (event) {\r\n                if (_this.isFocusing()) {\r\n                    _this.tooltip.hide();\r\n                    return;\r\n                }\r\n                event.stopPropagation();\r\n                var from = markerObject.scale.toArray();\r\n                tween(from, [activeScale, activeScale, activeScale], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\r\n                    var _a;\r\n                    if (markerObject) {\r\n                        (_a = markerObject.scale).set.apply(_a, from);\r\n                    }\r\n                });\r\n                // var originalEvent = event.data.originalEvent;\r\n                // _this.activeMarker = marker;\r\n                // _this.activeMarkerObject = markerObject;\r\n                // _this.callbacks.onMouseOverMarker(marker, markerObject, originalEvent);\r\n                // if (enableTooltip) {\r\n                //     _this.tooltip.show(originalEvent.clientX, originalEvent.clientY, getTooltipContent(marker));\r\n                // }\r\n            });\r\n        });\r\n        // remove marker objects that are stale\r\n        var markerObjectsToRemove = this.markerObjects.children.filter(function (markerObject) { return !markerCoordinatesKeys.has(markerObject.name); });\r\n        markerObjectsToRemove.forEach(function (markerObject) {\r\n            var from = markerObject.scale.toArray();\r\n            tween(from, [0, 0, 0], exitAnimationDuration, exitEasingFunction, function () {\r\n                var _a;\r\n                if (markerObject) {\r\n                    (_a = markerObject.scale).set.apply(_a, from);\r\n                }\r\n            }, function () {\r\n                _this.markerObjects.remove(markerObject);\r\n            });\r\n        });\r\n    };\r\n    Globe.prototype.updateOptions = function (options, key) {\r\n        var _a;\r\n        this.options = __assign(__assign({}, defaultOptions), (_a = {}, _a[key] = __assign(__assign({}, defaultOptions[key]), options), _a));\r\n    };\r\n    Globe.prototype.updateSize = function (size) {\r\n        if (size) {\r\n            var width = size[0], height = size[1];\r\n            this.renderer.setSize(width, height);\r\n            this.camera.aspect = width / height;\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n    Globe.prototype.unfreeze = function () {\r\n        if (this.isFrozen) {\r\n            this.isFrozen = false;\r\n            this.enableOrbitControls(true);\r\n            this.animate();\r\n        }\r\n    };\r\n    return Globe;\r\n}());\r\n\r\nfunction useResize(mountRef, initialSize) {\r\n    var _a = useState([0, 0]), size = _a[0], setSize = _a[1];\r\n    useEffect(function () {\r\n        var mount = mountRef.current;\r\n        // update initial size\r\n        var width = 0;\r\n        var height = 0;\r\n        if (initialSize) {\r\n            // Use initialSize if it is provided\r\n            width = initialSize[0];\r\n            height = initialSize[1];\r\n        }\r\n        else {\r\n            // Use parentElement size if resized has not updated\r\n            width = mount.offsetWidth;\r\n            height = mount.offsetHeight;\r\n        }\r\n        setSize([width, height]);\r\n        // update resize using a resize observer\r\n        var resizeObserver = new ResizeObserver(function (entries) {\r\n            if (!entries || !entries.length) {\r\n                return;\r\n            }\r\n            if (initialSize === undefined) {\r\n                var _a = entries[0].contentRect, width_1 = _a.width, height_1 = _a.height;\r\n                setSize([width_1, height_1]);\r\n            }\r\n        });\r\n        resizeObserver.observe(mount);\r\n        return function () {\r\n            resizeObserver.unobserve(mount);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [initialSize, mountRef]);\r\n    return size;\r\n}\r\n\r\nfunction ReactGlobe(_a) {\r\n    var animations = _a.animations, cameraOptions = _a.cameraOptions, focus = _a.focus, focusOptions = _a.focusOptions, globeOptions = _a.globeOptions, lightOptions = _a.lightOptions, initialCoordinates = _a.initialCoordinates, markers = _a.markers, markerOptions = _a.markerOptions, onClickMarker = _a.onClickMarker, onDefocus = _a.onDefocus, onMouseOutMarker = _a.onMouseOutMarker, onMouseOverMarker = _a.onMouseOverMarker, onGetGlobeInstance = _a.onGetGlobeInstance, onTextureLoaded = _a.onTextureLoaded, initialSize = _a.size;\r\n    var canvasRef = useRef();\r\n    var globeInstanceRef = useRef();\r\n    var mountRef = useRef();\r\n    var tooltipRef = useRef();\r\n    var size = useResize(mountRef, initialSize);\r\n    // init\r\n    useEffect(function () {\r\n        var mount = mountRef.current;\r\n        var globeInstance = new Globe(canvasRef.current, tooltipRef.current);\r\n        mount.appendChild(globeInstance.renderer.domElement);\r\n        globeInstance.animate();\r\n        globeInstanceRef.current = globeInstance;\r\n        onGetGlobeInstance && onGetGlobeInstance(globeInstance);\r\n        return function () {\r\n            mount.removeChild(globeInstance.renderer.domElement);\r\n            globeInstance.destroy();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    // update callbacks\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateCallbacks({\r\n            onClickMarker: onClickMarker,\r\n            onDefocus: onDefocus,\r\n            onMouseOutMarker: onMouseOutMarker,\r\n            onMouseOverMarker: onMouseOverMarker,\r\n            onTextureLoaded: onTextureLoaded,\r\n        });\r\n    }, [\r\n        onClickMarker,\r\n        onDefocus,\r\n        onMouseOutMarker,\r\n        onMouseOverMarker,\r\n        onTextureLoaded,\r\n    ]);\r\n    // update camera\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateCamera(initialCoordinates, cameraOptions);\r\n    }, [cameraOptions, initialCoordinates]);\r\n    // update focus\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateFocus(focus, focusOptions);\r\n    }, [focus, focusOptions]);\r\n    // update globe\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateGlobe(globeOptions);\r\n    }, [globeOptions]);\r\n    // update lights\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateLights(lightOptions);\r\n    }, [lightOptions]);\r\n    // update markers\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateMarkers(markers, markerOptions);\r\n    }, [markerOptions, markers]);\r\n    // apply animations\r\n    useEffect(function () {\r\n        return globeInstanceRef.current.applyAnimations(animations);\r\n    }, [animations]);\r\n    // resize\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateSize(size);\r\n    }, [size]);\r\n    return (React.createElement(\"div\", { ref: mountRef, style: { height: '100%', width: '100%' } },\r\n        React.createElement(\"canvas\", { ref: canvasRef, style: { display: 'block' } }),\r\n        React.createElement(\"div\", { ref: tooltipRef })));\r\n}\r\nReactGlobe.defaultProps = {\r\n    animations: [],\r\n    cameraOptions: defaultCameraOptions,\r\n    focusOptions: defaultFocusOptions,\r\n    globeOptions: defaultGlobeOptions,\r\n    lightOptions: defaultLightOptions,\r\n    initialCoordinates: INITIAL_COORDINATES,\r\n    markers: [],\r\n    markerOptions: defaultMarkerOptions,\r\n};\r\n\r\nexport default ReactGlobe;\r\nexport { BACKGROUND_RADIUS_SCALE, CAMERA_DAMPING_FACTOR, CAMERA_FAR, CAMERA_FOV, CAMERA_MAX_POLAR_ANGLE, CAMERA_MIN_DISTANCE_RADIUS_SCALE, CAMERA_MIN_POLAR_ANGLE, CAMERA_NEAR, CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, Globe, INITIAL_COORDINATES, MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, MARKER_DEFAULT_COLOR, MARKER_SEGMENTS, MARKER_UNIT_RADIUS_SCALE, MarkerType, ObjectName, RADIUS, Tooltip, coordinatesToPosition, defaultBarMarkerOptions, defaultCameraOptions, defaultDotMarkerOptions, defaultFocusOptions, defaultGlobeOptions, defaultLightOptions, defaultMarkerOptions, getMarkerCoordinatesKey, maxValue, minValue, tween };\r\n","\nconst markers = [\n    {\n        id: 1,\n        city: 'Ningbo | ',\n        year: '-2006',\n        activity: 'just a kid',\n        color: 'white',\n        coordinates: [29.8683, 121.5440],\n        value: 100,\n    },\n    {\n        id: 2,\n        city: 'Tianjin | ',\n        year: '2006-2011',\n        activity: 'study architecture',\n        color: 'white',\n        coordinates: [39.3434, 117.3616],\n        value: 100,\n    },\n    {\n        id: 3,\n        city: 'Boston | ',\n        color: 'white',\n        year: '2011-2015',\n        activity: 'student, researcher',\n        coordinates: [42.3601, -71.0589],\n        value: 100,\n    },\n    // {\n    //     id: 4,\n    //     city: 'Little Farmer\\'s Cay | ',\n    //     color: 'white',\n    //     year: '2013',\n    //     activity: 'researcher',\n    //     coordinates: [23.9580, -76.3224],\n    //     value: 100,\n    // },\n    {\n        id: 4,\n        city: 'Singapore | ',\n        color: 'white',\n        year: '2015-2019',\n        activity: 'architect, UX designer',\n        coordinates: [1.3521, 103.8198],\n        value: 100,\n    },\n    {\n        id: 5,\n        city: 'Berlin | ',\n        color: 'white',\n        year: '2019-',\n        activity: 'product designer at DH',\n        coordinates: [52.5200, 13.4050],\n        value: 100,\n    },\n];\n\nexport default markers;\n","import React, { useState } from 'react';\nimport './App.css';\nimport ReactGlobe from './react-globe';\nimport Container from 'react-bootstrap/Container';\nimport markers from './markers';\n\nfunction App() {\n  const [click, setClick] = useState(0)\n  return (\n    <div className=\"App\" onMouseDown={() => setClick(!click)}>\n      <Container fluid>\n        <div className=\"row\" style={{ height: \"100vh\" }}>\n          <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"#ffffff\"\n          }}\n            className=\"col-xl-6\">\n            <h1 style={{fontSize: 28, paddingLeft: \"6%\", paddingRight: \"6%\",lineHeight: \"160%\" }}>Jian He<br />Designer now based in Berlin</h1>\n          </div>\n          <div className=\"col-xl-6\" style={{ display: \"flex\", alignItems: \"center\" }}>\n            <div style={{ height: \"60%\", width: \"100%\" }}>\n              <ReactGlobe\n                globeOptions={{\n                  enableBackground: false,\n                  enableClouds: false,\n                  enableGlow: false,\n                  cloudsTexture: null\n                }}\n                cameraOptions={{\n                  autoRotateSpeed: 0.8,\n                  enableZoom: true,\n                  clickedOut: click\n                }}\n                markers={markers}\n                markerOptions={{\n                  glowCoefficient: 0.25,\n                  activeScale: 1,\n                  enableTooltip: true,\n                  getTooltipContent: marker => `${marker.city} ${marker.year} <br> ${marker.activity}`,\n                  radiusScaleRange: [0.001, 0.045],\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}